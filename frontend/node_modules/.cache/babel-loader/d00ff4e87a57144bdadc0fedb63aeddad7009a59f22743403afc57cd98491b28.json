{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api/todos';\nconst todoService = {\n  async getAllTodos() {\n    const response = await axios.get(API_BASE_URL);\n    return response.data;\n  },\n  async getTodoById(id) {\n    const response = await axios.get(`${API_BASE_URL}/${id}`);\n    return response.data;\n  },\n  async createTodo(todo) {\n    const response = await axios.post(API_BASE_URL, todo);\n    return response.data;\n  },\n  async updateTodo(id, todo) {\n    const response = await axios.put(`${API_BASE_URL}/${id}`, todo);\n    return response.data;\n  },\n  async toggleTodoStatus(id) {\n    const response = await axios.patch(`${API_BASE_URL}/${id}/toggle`);\n    return response.data;\n  },\n  async deleteTodo(id) {\n    await axios.delete(`${API_BASE_URL}/${id}`);\n  },\n  async getTodosByStatus(completed) {\n    const response = await axios.get(`${API_BASE_URL}/status/${completed}`);\n    return response.data;\n  }\n};\nexport default todoService;","map":{"version":3,"names":["axios","API_BASE_URL","todoService","getAllTodos","response","get","data","getTodoById","id","createTodo","todo","post","updateTodo","put","toggleTodoStatus","patch","deleteTodo","delete","getTodosByStatus","completed"],"sources":["/Users/lawj4/Code/java-stack/frontend/src/services/todoService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Todo } from '../types/Todo';\n\nconst API_BASE_URL = 'http://localhost:8080/api/todos';\n\nconst todoService = {\n  async getAllTodos(): Promise<Todo[]> {\n    const response = await axios.get(API_BASE_URL);\n    return response.data;\n  },\n\n  async getTodoById(id: number): Promise<Todo> {\n    const response = await axios.get(`${API_BASE_URL}/${id}`);\n    return response.data;\n  },\n\n  async createTodo(todo: Omit<Todo, 'id'>): Promise<Todo> {\n    const response = await axios.post(API_BASE_URL, todo);\n    return response.data;\n  },\n\n  async updateTodo(id: number, todo: Todo): Promise<Todo> {\n    const response = await axios.put(`${API_BASE_URL}/${id}`, todo);\n    return response.data;\n  },\n\n  async toggleTodoStatus(id: number): Promise<Todo> {\n    const response = await axios.patch(`${API_BASE_URL}/${id}/toggle`);\n    return response.data;\n  },\n\n  async deleteTodo(id: number): Promise<void> {\n    await axios.delete(`${API_BASE_URL}/${id}`);\n  },\n\n  async getTodosByStatus(completed: boolean): Promise<Todo[]> {\n    const response = await axios.get(`${API_BASE_URL}/status/${completed}`);\n    return response.data;\n  }\n};\n\nexport default todoService; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,iCAAiC;AAEtD,MAAMC,WAAW,GAAG;EAClB,MAAMC,WAAWA,CAAA,EAAoB;IACnC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,YAAY,CAAC;IAC9C,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,WAAWA,CAACC,EAAU,EAAiB;IAC3C,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,IAAIO,EAAE,EAAE,CAAC;IACzD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMG,UAAUA,CAACC,IAAsB,EAAiB;IACtD,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACW,IAAI,CAACV,YAAY,EAAES,IAAI,CAAC;IACrD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMM,UAAUA,CAACJ,EAAU,EAAEE,IAAU,EAAiB;IACtD,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAAC,GAAGZ,YAAY,IAAIO,EAAE,EAAE,EAAEE,IAAI,CAAC;IAC/D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMQ,gBAAgBA,CAACN,EAAU,EAAiB;IAChD,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACe,KAAK,CAAC,GAAGd,YAAY,IAAIO,EAAE,SAAS,CAAC;IAClE,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMU,UAAUA,CAACR,EAAU,EAAiB;IAC1C,MAAMR,KAAK,CAACiB,MAAM,CAAC,GAAGhB,YAAY,IAAIO,EAAE,EAAE,CAAC;EAC7C,CAAC;EAED,MAAMU,gBAAgBA,CAACC,SAAkB,EAAmB;IAC1D,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,WAAWkB,SAAS,EAAE,CAAC;IACvE,OAAOf,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}